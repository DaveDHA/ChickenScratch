#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"},{"aliases":[],"languageName":"fsharp","name":"fsharp"}]}}

#!pwsh

dotnet build ../ChickenScratch.sln

#!fsharp

#r "../ChickenScratch/bin/Debug/net7.0/ChickenScratch.dll"
open ChickenScratch

#!fsharp

module Test =
    open ChickenScratch.ScratchTagExpressions
    let getResourceList() = 
        ul {
            _style "color: blue"
            yield!                
                System.Reflection.Assembly.GetAssembly(typeof<ScratchNode>).GetManifestResourceNames()
                |> Seq.map (fun resource -> li { resource })
        }

    let doc =
        div {            
            style { """
                .mainHeader { color: red }

                .mainDiv {
                    border: solid 5px green;
                    background: white;
                    color: black;
                    padding: 0px 10px;
                }"""                    
            }
            
            // ScratchStyle.FromScratchResource "ChickenScratch.Resources.TreeTable.css"
            // ScratchScript.FromScratchResource "ChickenScratch.Resources.TreeTable.js"
            
            div {
                _class "mainDiv"                
                h1 { 
                    "This is a test document for Chicken Scratch" 
                    _class "mainHeader"
                }
                h2 { "Embedded Resources" ; _style "text-decoration: underline" }
                
                getResourceList()                
            }

            hr { () }
        }

#!fsharp

Test.doc.ToString().DisplayAs("text/html")

#!fsharp

sprintf "%A" Test.doc
